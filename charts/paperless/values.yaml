paperless-ngx:
  env:
    TZ: Europe/Zurich
  ingress:
    main:
      enabled: true
      hosts:
        - host: paperless.vexdev.com
          paths:
            - path: /
      annotations:
        spec.ingressClassName: traefik
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/service.serversscheme: http
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd,default-default-headers@kubernetescrd
      tls:
        - secretName: paperless-tls
          hosts:
            - paperless.vexdev.com
  postgresql:
    enabled: true
    primary:
      nodeSelector:
        vex.location: swisshome
      persistence:
        enabled: true
        storageClass: nfs-paperless
        accessMode: ReadWriteOnce
        size: 1Gi
  redis:
    enabled: true
  persistence:
    data:
      enabled: true
      storageClass: nfs-paperless
      accessMode: ReadWriteOnce
      size: 1Gi
    media:
      enabled: true
      storageClass: nfs-paperless
      accessMode: ReadWriteOnce
      size: 8Gi
    export:
      enabled: true
      storageClass: nfs-paperless
      accessMode: ReadWriteOnce
      size: 1Gi
    consume:
      enabled: true
      storageClass: nfs-paperless
      accessMode: ReadWriteOnce
      size: 4Gi
  nodeSelector:
    vex.location: swisshome

nfs-subdir-external-provisioner:
  nfs:
    server: 10.38.16.20
    path: /volume1/paperless
  storageClass:
    name: nfs-paperless
    reclaimPolicy: Retain # Prevents auto-deletion of data when PVC is removed
    pathPattern: "${.PVC.name}" # Ensures predictable directory names
    archiveOnDelete: false # Prevents the provisioner from archiving folders
    onDelete: retain # Explicitly retains folders when PVC is deleted
  nodeSelector:
    vex.location: swisshome
