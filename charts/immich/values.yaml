immich:
  image:
    tag: v1.128.0
  immich:
    persistence:
      library:
        existingClaim: photo-volume-claim
  redis:
    enabled: true
    master:
      nodeSelector:
        vex.location: swisshome
    replica:
      nodeSelector:
        vex.location: swisshome
  machine-learning:
    enabled: true
    nodeSelector:
      vex.location: swisshome
  server:
    env:
      IMMICH_LOG_LEVEL: verbose
      DB_VECTOR_EXTENSION: pgvector
    nodeSelector:
      vex.location: swisshome
postgresql:
  image:
    repository: pgvector/pgvector
    tag: 0.8.0-pg17
  global:
    security:
      allowInsecureImages: true
    postgresql:
      auth:
        username: immich
        database: immich
        password: immich
  primary:
    resources:
      requests:
        memory: 1Gi
        cpu: 500m
    nodeSelector:
      vex.location: swisshome
    containerSecurityContext:
      readOnlyRootFilesystem: false
    initdb:
      scripts:
        create-extensions.sql: |
          CREATE EXTENSION cube;
          CREATE EXTENSION earthdistance;
          CREATE EXTENSION vectors;
  readReplicas:
    nodeSelector:
      vex.location: swisshome
  backup:
    cronjob:
      nodeSelector:
        vex.location: swisshome
nfs-subdir-external-provisioner:
  nfs:
    server: 10.38.16.20
    path: /volume1/photo
  storageClass:
    name: nfs-photo
    reclaimPolicy: Retain # Prevents auto-deletion of data when PVC is removed
    pathPattern: "${.PVC.name}" # Ensures predictable directory names
    archiveOnDelete: false # Prevents the provisioner from archiving folders
    onDelete: retain # Explicitly retains folders when PVC is deleted
  nodeSelector:
    vex.location: swisshome
